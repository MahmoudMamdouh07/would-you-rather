{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahmo\\\\would-you-rather\\\\src\\\\components\\\\QuestionSolution.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAddAnswer } from \"../actions/questions\";\n\nclass QuestionSolution extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      answer: \"\"\n    };\n\n    this.handleSelectAnswer = e => {\n      const text = e.target.value;\n      this.setState(() => ({\n        answer: text\n      }));\n    };\n\n    this.submitAnswer = e => {\n      e.preventDefault();\n      const {\n        answer\n      } = this.state;\n      const {\n        question,\n        dispatch\n      } = this.props;\n      saveQuestionAnswer(answer);\n      this.setState(() => ({\n        answer: \"\"\n      }));\n    };\n  }\n\n  render() {\n    const {\n      question\n    } = this.props;\n    console.log(question);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleSelectAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"optionOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, question.optionOne.text), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"optionTwo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, question.optionTwo.text)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.submitAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, \"Submit answer\"));\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}, props) {\n  const {\n    questionId\n  } = props.match.params;\n  const question = questions[questionId];\n  return {\n    question\n  };\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  const {\n    id\n  } = props.match.params;\n  return {\n    saveQuestionAnswer: answer => {\n      dispatch(handleAddAnswer(id, answer));\n    }\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionSolution);","map":{"version":3,"sources":["C:/Users/mahmo/would-you-rather/src/components/QuestionSolution.js"],"names":["React","Component","connect","handleAddAnswer","QuestionSolution","state","answer","handleSelectAnswer","e","text","target","value","setState","submitAnswer","preventDefault","question","dispatch","props","saveQuestionAnswer","render","console","log","optionOne","optionTwo","mapStateToProps","questions","users","authedUser","questionId","match","params","mapDispatchToProps","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,sBAAhC;;AACA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCI,KADuC,GAC/B;AACNC,MAAAA,MAAM,EAAE;AADF,KAD+B;;AAAA,SAIvCC,kBAJuC,GAIjBC,CAAD,IAAO;AAC1B,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAtB;AACA,WAAKC,QAAL,CAAc,OAAO;AACnBN,QAAAA,MAAM,EAAEG;AADW,OAAP,CAAd;AAGD,KATsC;;AAAA,SAUvCI,YAVuC,GAUvBL,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACM,cAAF;AACA,YAAM;AAAER,QAAAA;AAAF,UAAa,KAAKD,KAAxB;AACA,YAAM;AAAEU,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAyB,KAAKC,KAApC;AACAC,MAAAA,kBAAkB,CAACZ,MAAD,CAAlB;AACA,WAAKM,QAAL,CAAc,OAAO;AACnBN,QAAAA,MAAM,EAAE;AADW,OAAP,CAAd;AAGD,KAlBsC;AAAA;;AAmBvCa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA;AAAF,QAAe,KAAKE,KAA1B;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,QAAQ,EAAE,KAAKR,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BQ,QAAQ,CAACO,SAAT,CAAmBb,IAA9C,CADF,eAEE;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BM,QAAQ,CAACQ,SAAT,CAAmBd,IAA9C,CAFF,CADF,eAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKI,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,CADF;AAWD;;AAlCsC;;AAqCzC,SAASW,eAAT,CAAyB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAzB,EAA2DV,KAA3D,EAAkE;AAChE,QAAM;AAAEW,IAAAA;AAAF,MAAiBX,KAAK,CAACY,KAAN,CAAYC,MAAnC;AACA,QAAMf,QAAQ,GAAGU,SAAS,CAACG,UAAD,CAA1B;AACA,SAAO;AAAEb,IAAAA;AAAF,GAAP;AACD;;AAED,SAASgB,kBAAT,CAA4Bf,QAA5B,EAAsCC,KAAtC,EAA6C;AAC3C,QAAM;AAAEe,IAAAA;AAAF,MAASf,KAAK,CAACY,KAAN,CAAYC,MAA3B;AAEA,SAAO;AACLZ,IAAAA,kBAAkB,EAAGZ,MAAD,IAAY;AAC9BU,MAAAA,QAAQ,CAACb,eAAe,CAAC6B,EAAD,EAAK1B,MAAL,CAAhB,CAAR;AACD;AAHI,GAAP;AAKD;;AACD,eAAeJ,OAAO,CAACsB,eAAD,CAAP,CAAyBpB,gBAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleAddAnswer } from \"../actions/questions\";\r\nclass QuestionSolution extends Component {\r\n  state = {\r\n    answer: \"\",\r\n  };\r\n  handleSelectAnswer = (e) => {\r\n    const text = e.target.value;\r\n    this.setState(() => ({\r\n      answer: text,\r\n    }));\r\n  };\r\n  submitAnswer = (e) => {\r\n    e.preventDefault();\r\n    const { answer } = this.state;\r\n    const { question, dispatch } = this.props;\r\n    saveQuestionAnswer(answer);\r\n    this.setState(() => ({\r\n      answer: \"\",\r\n    }));\r\n  };\r\n  render() {\r\n    const { question } = this.props;\r\n\r\n    console.log(question);\r\n    return (\r\n      <div>\r\n        <select onChange={this.handleSelectAnswer}>\r\n          <option value=\"optionOne\">{question.optionOne.text}</option>\r\n          <option value=\"optionTwo\">{question.optionTwo.text}</option>\r\n        </select>\r\n        <button type=\"submit\" onClick={this.submitAnswer}>\r\n          Submit answer\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ questions, users, authedUser }, props) {\r\n  const { questionId } = props.match.params;\r\n  const question = questions[questionId];\r\n  return { question };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch, props) {\r\n  const { id } = props.match.params;\r\n\r\n  return {\r\n    saveQuestionAnswer: (answer) => {\r\n      dispatch(handleAddAnswer(id, answer));\r\n    },\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(QuestionSolution);\r\n"]},"metadata":{},"sourceType":"module"}