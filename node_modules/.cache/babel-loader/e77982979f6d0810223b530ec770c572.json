{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahmo\\\\would-you-rather\\\\src\\\\components\\\\QuestionSolution.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAddAnswer } from \"../actions/questions\";\n\nclass QuestionSolution extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      answer: \"\"\n    };\n\n    this.handleSelectAnswer = e => {\n      const text = e.target.value;\n      this.setState(() => ({\n        answer: text\n      }));\n    };\n\n    this.submitAnswer = e => {\n      e.preventDefault();\n      const {\n        answer\n      } = this.state;\n      const {\n        addAnswerToQuestion,\n        user,\n        question\n      } = this.props;\n      addAnswerToQuestion({\n        question,\n        answer,\n        authedUser: user\n      });\n      this.setState(() => ({\n        answer: \"\"\n      }));\n    };\n  }\n\n  render() {\n    const {\n      user,\n      question\n    } = this.props;\n    console.log(question);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleSelectAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"optionOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, question.optionOne.text), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"optionTwo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, question.optionTwo.text)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.submitAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Submit answer\"));\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}, props) {\n  const {\n    questionId\n  } = props.match.params;\n  const question = questions[questionId];\n  const user = users[authedUser];\n  return {\n    user,\n    question\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addAnswerToQuestion: (question, answer, authedUser) => {\n      dispatch(handleAddAnswer({\n        question,\n        answer,\n        authedUser\n      }));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionSolution);","map":{"version":3,"sources":["C:/Users/mahmo/would-you-rather/src/components/QuestionSolution.js"],"names":["React","Component","connect","handleAddAnswer","QuestionSolution","state","answer","handleSelectAnswer","e","text","target","value","setState","submitAnswer","preventDefault","addAnswerToQuestion","user","question","props","authedUser","render","console","log","optionOne","optionTwo","mapStateToProps","questions","users","questionId","match","params","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,sBAAhC;;AACA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCI,KADuC,GAC/B;AACNC,MAAAA,MAAM,EAAE;AADF,KAD+B;;AAAA,SAIvCC,kBAJuC,GAIjBC,CAAD,IAAO;AAC1B,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAtB;AACA,WAAKC,QAAL,CAAc,OAAO;AACnBN,QAAAA,MAAM,EAAEG;AADW,OAAP,CAAd;AAGD,KATsC;;AAAA,SAUvCI,YAVuC,GAUvBL,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACM,cAAF;AACA,YAAM;AAAER,QAAAA;AAAF,UAAa,KAAKD,KAAxB;AACA,YAAM;AAAEU,QAAAA,mBAAF;AAAuBC,QAAAA,IAAvB;AAA6BC,QAAAA;AAA7B,UAA0C,KAAKC,KAArD;AACAH,MAAAA,mBAAmB,CAAC;AAClBE,QAAAA,QADkB;AAElBX,QAAAA,MAFkB;AAGlBa,QAAAA,UAAU,EAAEH;AAHM,OAAD,CAAnB;AAKA,WAAKJ,QAAL,CAAc,OAAO;AACnBN,QAAAA,MAAM,EAAE;AADW,OAAP,CAAd;AAGD,KAtBsC;AAAA;;AAuBvCc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAqB,KAAKC,KAAhC;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,QAAQ,EAAE,KAAKV,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BU,QAAQ,CAACM,SAAT,CAAmBd,IAA9C,CADF,eAEE;AAAQ,MAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BQ,QAAQ,CAACO,SAAT,CAAmBf,IAA9C,CAFF,CADF,eAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKI,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,CADF;AAWD;;AAtCsC;;AAyCzC,SAASY,eAAT,CAAyB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBR,EAAAA;AAApB,CAAzB,EAA2DD,KAA3D,EAAkE;AAChE,QAAM;AAAEU,IAAAA;AAAF,MAAiBV,KAAK,CAACW,KAAN,CAAYC,MAAnC;AACA,QAAMb,QAAQ,GAAGS,SAAS,CAACE,UAAD,CAA1B;AACA,QAAMZ,IAAI,GAAGW,KAAK,CAACR,UAAD,CAAlB;AACA,SAAO;AAAEH,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP;AACD;;AAED,SAASc,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLjB,IAAAA,mBAAmB,EAAE,CAACE,QAAD,EAAWX,MAAX,EAAmBa,UAAnB,KAAkC;AACrDa,MAAAA,QAAQ,CAAC7B,eAAe,CAAC;AAAEc,QAAAA,QAAF;AAAYX,QAAAA,MAAZ;AAAoBa,QAAAA;AAApB,OAAD,CAAhB,CAAR;AACD;AAHI,GAAP;AAKD;;AAED,eAAejB,OAAO,CAACuB,eAAD,EAAkBM,kBAAlB,CAAP,CAA6C3B,gBAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleAddAnswer } from \"../actions/questions\";\r\nclass QuestionSolution extends Component {\r\n  state = {\r\n    answer: \"\",\r\n  };\r\n  handleSelectAnswer = (e) => {\r\n    const text = e.target.value;\r\n    this.setState(() => ({\r\n      answer: text,\r\n    }));\r\n  };\r\n  submitAnswer = (e) => {\r\n    e.preventDefault();\r\n    const { answer } = this.state;\r\n    const { addAnswerToQuestion, user, question } = this.props;\r\n    addAnswerToQuestion({\r\n      question,\r\n      answer,\r\n      authedUser: user,\r\n    });\r\n    this.setState(() => ({\r\n      answer: \"\",\r\n    }));\r\n  };\r\n  render() {\r\n    const { user, question } = this.props;\r\n\r\n    console.log(question);\r\n    return (\r\n      <div>\r\n        <select onChange={this.handleSelectAnswer}>\r\n          <option value=\"optionOne\">{question.optionOne.text}</option>\r\n          <option value=\"optionTwo\">{question.optionTwo.text}</option>\r\n        </select>\r\n        <button type=\"submit\" onClick={this.submitAnswer}>\r\n          Submit answer\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ questions, users, authedUser }, props) {\r\n  const { questionId } = props.match.params;\r\n  const question = questions[questionId];\r\n  const user = users[authedUser];\r\n  return { user, question };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addAnswerToQuestion: (question, answer, authedUser) => {\r\n      dispatch(handleAddAnswer({ question, answer, authedUser }));\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionSolution);\r\n"]},"metadata":{},"sourceType":"module"}