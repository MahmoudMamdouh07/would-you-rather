{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahmo\\\\would-you-rather\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { PureComponent } from \"react\";\nimport Question from \"./Question\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from \"reactstrap\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass DashBoard extends PureComponent {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, this.props.authedUser);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}) {\n  const user = users[authedUser];\n  const answeredQuestions = Object.keys(user.answers).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  return {\n    unansweredQuestions: Object.keys(questions).filter(qid => !answeredQuestions.includes(qid)).sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n    answeredQuestions,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(DashBoard);","map":{"version":3,"sources":["C:/Users/mahmo/would-you-rather/src/components/Dashboard.js"],"names":["React","PureComponent","Question","TabContent","TabPane","Nav","NavItem","NavLink","Row","Col","classnames","connect","PropTypes","DashBoard","render","props","authedUser","mapStateToProps","questions","users","user","answeredQuestions","Object","keys","answers","sort","a","b","timestamp","unansweredQuestions","filter","qid","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SACEC,UADF,EAEEC,OAFF,EAGEC,GAHF,EAIEC,OAJF,EAKEC,OALF,EAMEC,GANF,EAOEC,GAPF,QAQO,YARP;AASA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAN,SAAwBZ,aAAxB,CAAsC;AACpCa,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKC,KAAL,CAAWC,UAAjB,CAAP;AACD;;AAHmC;;AAMtC,SAASC,eAAT,CAAyB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBH,EAAAA;AAApB,CAAzB,EAA2D;AACzD,QAAMI,IAAI,GAAGD,KAAK,CAACH,UAAD,CAAlB;AACA,QAAMK,iBAAiB,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACI,OAAjB,EAA0BC,IAA1B,CACxB,CAACC,CAAD,EAAIC,CAAJ,KAAUT,SAAS,CAACS,CAAD,CAAT,CAAaC,SAAb,GAAyBV,SAAS,CAACQ,CAAD,CAAT,CAAaE,SADxB,CAA1B;AAGA,SAAO;AACLC,IAAAA,mBAAmB,EAAEP,MAAM,CAACC,IAAP,CAAYL,SAAZ,EAClBY,MADkB,CACVC,GAAD,IAAS,CAACV,iBAAiB,CAACW,QAAlB,CAA2BD,GAA3B,CADC,EAElBN,IAFkB,CAEb,CAACC,CAAD,EAAIC,CAAJ,KAAUT,SAAS,CAACS,CAAD,CAAT,CAAaC,SAAb,GAAyBV,SAAS,CAACQ,CAAD,CAAT,CAAaE,SAFnC,CADhB;AAILP,IAAAA,iBAJK;AAKLL,IAAAA;AALK,GAAP;AAOD;;AAED,eAAeL,OAAO,CAACM,eAAD,CAAP,CAAyBJ,SAAzB,CAAf","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport Question from \"./Question\";\r\nimport {\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass DashBoard extends PureComponent {\r\n  render() {\r\n    return <div>{this.props.authedUser}</div>;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ questions, users, authedUser }) {\r\n  const user = users[authedUser];\r\n  const answeredQuestions = Object.keys(user.answers).sort(\r\n    (a, b) => questions[b].timestamp - questions[a].timestamp\r\n  );\r\n  return {\r\n    unansweredQuestions: Object.keys(questions)\r\n      .filter((qid) => !answeredQuestions.includes(qid))\r\n      .sort((a, b) => questions[b].timestamp - questions[a].timestamp),\r\n    answeredQuestions,\r\n    authedUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DashBoard);\r\n"]},"metadata":{},"sourceType":"module"}