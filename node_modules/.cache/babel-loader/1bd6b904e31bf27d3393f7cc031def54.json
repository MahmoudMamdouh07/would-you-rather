{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mahmo\\\\would-you-rather\\\\src\\\\components\\\\QuestionSolution.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAddAnswer } from \"../actions/questions\";\n\nclass QuestionSolution extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      answer: \"\"\n    };\n\n    this.handleSelectAnswer = e => {\n      const text = e.target.value;\n      this.setState(() => ({\n        answer: text\n      }));\n    };\n\n    this.submitAnswer = e => {\n      e.preventDefault();\n      const {\n        answer\n      } = this.state;\n      this.props.saveQuestionAnswer(answer);\n    };\n  }\n\n  render() {\n    const {\n      question,\n      answered\n    } = this.props;\n    console.log(question);\n    console.log(answered);\n    document.getElementById(answered).innerHTML += \"checked\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onClick: this.handleSelectAnswer,\n      type: \"radio\",\n      value: \"optionOne\",\n      disabled: answered !== \"\",\n      checked: answered === \"optionOne\",\n      id: \"optionOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, question.optionOne.text), /*#__PURE__*/React.createElement(\"input\", {\n      onClick: this.handleSelectAnswer,\n      type: \"radio\",\n      value: \"optionTwo\",\n      disabled: answered !== \"\",\n      id: \"optionTwo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, question.optionTwo.text), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.submitAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Submit answer\"));\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  authedUser,\n  users\n}, props) {\n  const {\n    qid\n  } = props.match.params;\n  const question = questions[qid];\n  const user = users[authedUser];\n  const answered = user.answers[qid] ? user.answers[qid] : \"\";\n  return {\n    question,\n    user,\n    answered\n  };\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  const {\n    qid\n  } = props.match.params;\n  return {\n    saveQuestionAnswer: answer => {\n      dispatch(handleAddAnswer(qid, answer));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionSolution);","map":{"version":3,"sources":["C:/Users/mahmo/would-you-rather/src/components/QuestionSolution.js"],"names":["React","Component","connect","handleAddAnswer","QuestionSolution","state","answer","handleSelectAnswer","e","text","target","value","setState","submitAnswer","preventDefault","props","saveQuestionAnswer","render","question","answered","console","log","document","getElementById","innerHTML","optionOne","optionTwo","mapStateToProps","questions","authedUser","users","qid","match","params","user","answers","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleAddAnswer } from \"../actions/questions\";\r\nclass QuestionSolution extends Component {\r\n  state = {\r\n    answer: \"\",\r\n  };\r\n  handleSelectAnswer = (e) => {\r\n    const text = e.target.value;\r\n    this.setState(() => ({\r\n      answer: text,\r\n    }));\r\n  };\r\n  /*\r\n  \r\n        <select onChange={this.handleSelectAnswer}>\r\n          <option defaultValue value=\"optionOne\">\r\n            {question.optionOne.text}\r\n          </option>\r\n          <option value=\"optionTwo\">{question.optionTwo.text}</option>\r\n        </select>\r\n        */\r\n  submitAnswer = (e) => {\r\n    e.preventDefault();\r\n    const { answer } = this.state;\r\n    this.props.saveQuestionAnswer(answer);\r\n  };\r\n  render() {\r\n    const { question, answered } = this.props;\r\n\r\n    console.log(question);\r\n    console.log(answered);\r\n    document.getElementById(answered).innerHTML += \"checked\";\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          onClick={this.handleSelectAnswer}\r\n          type=\"radio\"\r\n          value=\"optionOne\"\r\n          disabled={answered !== \"\"}\r\n          checked={answered === \"optionOne\"}\r\n          id=\"optionOne\"\r\n        />\r\n        <p>{question.optionOne.text}</p>\r\n        <input\r\n          onClick={this.handleSelectAnswer}\r\n          type=\"radio\"\r\n          value=\"optionTwo\"\r\n          disabled={answered !== \"\"}\r\n          id=\"optionTwo\"\r\n        />\r\n        <p>{question.optionTwo.text}</p>\r\n        <button type=\"submit\" onClick={this.submitAnswer}>\r\n          Submit answer\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ questions, authedUser, users }, props) {\r\n  const { qid } = props.match.params;\r\n  const question = questions[qid];\r\n  const user = users[authedUser];\r\n  const answered = user.answers[qid] ? user.answers[qid] : \"\";\r\n  return { question, user, answered };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch, props) {\r\n  const { qid } = props.match.params;\r\n\r\n  return {\r\n    saveQuestionAnswer: (answer) => {\r\n      dispatch(handleAddAnswer(qid, answer));\r\n    },\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionSolution);\r\n"]},"metadata":{},"sourceType":"module"}